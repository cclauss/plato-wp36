# -*- coding: utf-8 -*-
# lcsg_lc_reader.py

"""
Read the ASCII lightcurves generated by the lightcurve stitching group, and turn them into Lightcurve objects.
"""

import numpy as np

from .lightcurve import LightcurveArbitraryRaster


def read_lcsg_lightcurve(filename):
    """
    Read a lightcurve from an ASCII data file.

    :param filename:
        The filename of the input data file.
    :type filename:
        str
    :return:
        A <LightcurveArbitraryRaster> object.
    """

    times = []
    fluxes = []
    uncertainties = []

    # Loop over lines of input file
    with open(filename) as file:
        for line in file:
            # Ignore blank lines and comment lines
            if len(line) == 0 or line[0] == '#':
                continue

            # Read three columns of data
            words = line.split()
            times.append(float(words[0]))
            fluxes.append(float(words[1]))
            uncertainties.append(float(words[2]))

    # Convert into a Lightcurve object
    lightcurve = LightcurveArbitraryRaster(times=np.asarray(times),
                                           fluxes=np.asarray(fluxes),
                                           uncertainties=np.asarray(uncertainties)
                                           )

    # Return lightcurve
    return lightcurve
